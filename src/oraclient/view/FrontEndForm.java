
package oraclient.view;


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;

import java.sql.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;

import java.sql.Statement;

import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.text.DefaultEditorKit;

import javax.swing.undo.UndoManager;

import oracle.jdbc.OracleDriver;

import oraclient.component.ClientPane;

import oraclient.component.ClientArea;

import oraclient.component.ClientUndoManager;

import oraclient.sql.conns.DBConnection;
import oraclient.sql.drivers.LoadDrivers;
import oraclient.io.NewFile;


/**
 *
 * @author Price
 */
public class FrontEndForm extends javax.swing.JFrame {

    private ClientArea area;
    private DBConnection oracle;
    private Connection conn;

    /** Creates new form Main */
    public FrontEndForm() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        tabPane = new javax.swing.JTabbedPane();
        outputArea = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        console = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTree2 = new javax.swing.JTree();
        MainMenu = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        connectMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        newFileMenuItem = new javax.swing.JMenuItem();
        openFileMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        closeFileMenuItem = new javax.swing.JMenuItem();
        closeAllMenuItem = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        saveFileMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        saveAllMenuItem = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        undoMenuItem = new javax.swing.JMenuItem();
        redoMenuItem = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        cutMenuItem = new javax.swing.JMenuItem(new DefaultEditorKit.CutAction());
        copyMenuItem = new javax.swing.JMenuItem(new DefaultEditorKit.CopyAction());
        pasteMenuItem = new javax.swing.JMenuItem(new DefaultEditorKit.PasteAction());
        runMenu = new javax.swing.JMenu();
        runScriptMenuItem = new javax.swing.JMenuItem();
        reportMenu = new javax.swing.JMenu();
        sessionMenu = new javax.swing.JMenu();
        getSessionsMenuItem = new javax.swing.JMenuItem();
        closeSessionsMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DBClient");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(560, 420));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tabPane.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        outputArea.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        console.setColumns(20);
        console.setRows(5);
        jScrollPane2.setViewportView(console);

        outputArea.addTab("tab2", jScrollPane2);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        outputArea.addTab("tab2", jScrollPane1);

        jTabbedPane2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jScrollPane4.setViewportView(jTree2);

        jTabbedPane2.addTab("tab1", jScrollPane4);

        fileMenu.setText("Файл");

        connectMenuItem.setText("Соединиться...");
        connectMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(connectMenuItem);
        fileMenu.add(jSeparator1);

        newFileMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newFileMenuItem.setText("Новый...");
        newFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFileMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(newFileMenuItem);

        openFileMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openFileMenuItem.setText("Открыть...");
        openFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openFileMenuItem);
        fileMenu.add(jSeparator2);

        closeFileMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        closeFileMenuItem.setText("Закрыть");
        closeFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFileMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(closeFileMenuItem);

        closeAllMenuItem.setText("Закрыть все");
        fileMenu.add(closeAllMenuItem);
        fileMenu.add(jSeparator3);

        saveFileMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveFileMenuItem.setText("Сохранить");
        saveFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveFileMenuItem);

        saveAsMenuItem.setText("Сохранить как...");
        fileMenu.add(saveAsMenuItem);

        saveAllMenuItem.setText("Сохранить все");
        fileMenu.add(saveAllMenuItem);
        fileMenu.add(jSeparator4);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        exitMenuItem.setText("Выход");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        MainMenu.add(fileMenu);

        editMenu.setText("Редактирование");

        undoMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        undoMenuItem.setText("Отменить");
        undoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(undoMenuItem);

        redoMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        redoMenuItem.setText("Вернуть");
        redoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redoMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(redoMenuItem);
        editMenu.add(jSeparator6);

        cutMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        cutMenuItem.setMnemonic(KeyEvent.VK_T);
        cutMenuItem.setText("Вырезать");
        editMenu.add(cutMenuItem);

        copyMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        copyMenuItem.setMnemonic(KeyEvent.VK_C);
        copyMenuItem.setText("Копировать");
        copyMenuItem.setToolTipText("");
        editMenu.add(copyMenuItem);

        pasteMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        pasteMenuItem.setMnemonic(KeyEvent.VK_P);
        pasteMenuItem.setText("Вставить");
        editMenu.add(pasteMenuItem);

        MainMenu.add(editMenu);

        runMenu.setText("Выполнить");

        runScriptMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        runScriptMenuItem.setText("Выполнить сценарий");
        runScriptMenuItem.setEnabled(false);
        runScriptMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runScriptMenuItemActionPerformed(evt);
            }
        });
        runMenu.add(runScriptMenuItem);

        MainMenu.add(runMenu);

        reportMenu.setText("Отчет");
        MainMenu.add(reportMenu);

        sessionMenu.setText("Сессии");

        getSessionsMenuItem.setText("Список сессий");
        sessionMenu.add(getSessionsMenuItem);

        closeSessionsMenuItem.setText("Завершить все сессии");
        sessionMenu.add(closeSessionsMenuItem);

        MainMenu.add(sessionMenu);

        setJMenuBar(MainMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(outputArea, javax.swing.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                    .addComponent(tabPane)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabPane)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(outputArea, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }//GEN-END:initComponents

    
    private void newFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFileMenuItemActionPerformed
        FileJDialog dialog = new FileJDialog();
        dialog.setVisible(true);
        String filePath = dialog.getFileLocation().getText() + dialog.getFileName().getText();
        //        dialog.getOkButton().addActionListener(new ActionListener(){
        //            @Override
        //            public void actionPerformed(ActionEvent e) {
        //                newFile(filePath);
        //            }
        //        });
        newFile(filePath);
        runScriptMenuItem.setEnabled(true);
    }//GEN-LAST:event_newFileMenuItemActionPerformed

    private void newFile(String filePath) {
        NewFile file = new NewFile(filePath);
        ClientPane pane = new ClientPane();
        pane.addJScrollPane(new JScrollPane());
        area = new ClientArea();
        this.area.addJTextArea(new JTextArea());
        new ClientUndoManager().addUndoManager(new UndoManager());
        tabPane.addTab(file.getName(),
                       pane.getScrollPanes().iterator().next().add(this.area.getTextAreas().iterator().next()));
    }

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        //        if(!saved) {
//        saveFileActionPerformed(evt);
        //        }
        closeStreams();
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void saveFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileMenuItemActionPerformed
        //        if(!saved) {
        //            save();
        //        }
    }//GEN-LAST:event_saveFileMenuItemActionPerformed

    private void closeFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFileMenuItemActionPerformed
        //        if(!saved) {
//        saveFileActionPerformed(evt);
        //        }
        closeStreams();
    }//GEN-LAST:event_closeFileMenuItemActionPerformed

    private void connectMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectMenuItemActionPerformed
    //        connDialog = new ConnectionDialog();
    //        connDialog.setVisible(true);

        new LoadDrivers("oracle.jdbc.OracleDriver");
        oracle = new DBConnection();
        try {
            conn = DBConnection.getConnection();
        } catch (SQLException e) {
        }
        //        try (Connection conn = DBConnection.getConnection()) {
//            oracle.getDBName(conn, this);
//            Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
////            stmt.executeQuery("select * from departments");
//            stmt.execute(area.getTextAreas().iterator().next().getText());
//            oracle.getResultSet(stmt, console, jTable1);
//        } catch (SQLException e) {
//        }
            
    }//GEN-LAST:event_connectMenuItemActionPerformed

    private void undoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoMenuItemActionPerformed
        //        if(undoMgr.canUndo())
        //            undoMgr.undo();
    }//GEN-LAST:event_undoMenuItemActionPerformed

    private void redoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redoMenuItemActionPerformed
        //        if(undoMgr.canRedo())
        //            undoMgr.redo();
    }//GEN-LAST:event_redoMenuItemActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        //        if(!saved) {
        //            save();
        //        }
        closeStreams();
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void runScriptMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runScriptMenuItemActionPerformed
        //        if(!connected)
        //connectActionPerformed(evt);
        //            oracle.exec(oracle.getConn(), area.getTextAreas().iterator().next());
        
//        try (Connection conn = DBConnection.getConnection()) {
//        Statement stmt = null;
        try {
            oracle.getDBName(conn, this);
            Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
        //            stmt.executeQuery("select * from departments");
            stmt.execute(area.getTextAreas().iterator().next().getText());
            oracle.getResultSet(stmt, console, jTable1);
        } catch (SQLException e) {
        } finally {
            try {
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException e) {
            }
//            if(stmt != null) {
//                try {
//                    stmt.close();
//                } catch (SQLException e) {
//                }
//            }
        }
    }//GEN-LAST:event_runScriptMenuItemActionPerformed

    private void openFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileMenuItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_openFileMenuItemActionPerformed
    
    private void closeStreams() {
        try {
        } finally {
//            try {
//                if(sqlFile.writer != null)
//                    sqlFile.writer.close();
//            } catch (Exception e) {
//                e.printStackTrace();
//            }
            
                if(conn != null) {
                    try {
                        conn.close();
                    } catch (SQLException e) {
                    }
//                    connected = false;
                }
            
//            try {
//                if(stmt != null)
//                    stmt.close();
//            } catch (Exception e) {
//                e.printStackTrace();
//            }
//            try {
//                if(rs != null)
//                    rs.close();
//            } catch (Exception e) {
//                e.printStackTrace();
//            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrontEndForm.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                 ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrontEndForm.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                 ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrontEndForm.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                 ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrontEndForm.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                 ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrontEndForm().setVisible(true);
            }
        });
    }

    private ConnectionDialog connDialog;
        
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar MainMenu;
    private javax.swing.JMenuItem closeAllMenuItem;
    private javax.swing.JMenuItem closeFileMenuItem;
    private javax.swing.JMenuItem closeSessionsMenuItem;
    private javax.swing.JMenuItem connectMenuItem;
    private javax.swing.JTextArea console;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem getSessionsMenuItem;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTree jTree2;
    private javax.swing.JMenuItem newFileMenuItem;
    private javax.swing.JMenuItem openFileMenuItem;
    private javax.swing.JTabbedPane outputArea;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem redoMenuItem;
    private javax.swing.JMenu reportMenu;
    private javax.swing.JMenu runMenu;
    private javax.swing.JMenuItem runScriptMenuItem;
    private javax.swing.JMenuItem saveAllMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveFileMenuItem;
    private javax.swing.JMenu sessionMenu;
    private javax.swing.JTabbedPane tabPane;
    private javax.swing.JMenuItem undoMenuItem;
    // End of variables declaration//GEN-END:variables

}
