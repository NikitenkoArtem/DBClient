
package oraclient.view;


import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;

import java.io.File;

import java.io.IOException;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import java.util.HashMap;
import java.util.Map;

import javax.imageio.ImageIO;

import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTree;
import javax.swing.text.DefaultEditorKit;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeModel;
import javax.swing.undo.UndoManager;

import oraclient.component.ClientArea;
import oraclient.component.ClientUndoManager;

import oraclient.io.NewFile;

import oraclient.report.Report;

import oraclient.sql.conns.DBConnection;
import oraclient.sql.driver.LoadDriver;


/**
 *
 * @author Price
 */
public class FrontEndForm extends javax.swing.JFrame {

    private ClientArea area;
    private DBConnection oracle;
    private Connection connect;
    private NewFile file;
    private ClientUndoManager undoMgr;
//    private UndoManager undo;
    private Map<String, String> titles = new HashMap<>();

    public FrontEndForm() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        dbRollbackButton = new javax.swing.JButton();
        dbCommitButton = new javax.swing.JButton();
        sqlRunButton = new javax.swing.JButton();
        saveAllButton = new javax.swing.JButton();
        saveFileButton = new javax.swing.JButton();
        openFileButton = new javax.swing.JButton();
        dbUsersComboBox = new javax.swing.JComboBox();
        jSplitPane3 = new javax.swing.JSplitPane();
        jSplitPane4 = new javax.swing.JSplitPane();
        tabPane = new javax.swing.JTabbedPane();
        outputArea = new javax.swing.JTabbedPane();
        consoleScrollPane = new javax.swing.JScrollPane();
        console = new javax.swing.JTextArea();
        tableScrollPane = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        connectionsTabbedPane = new javax.swing.JTabbedPane();
        connectionScrollPane = new javax.swing.JScrollPane();
        connectionsTree = new javax.swing.JTree();
        MainMenu = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        connectMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        newFileMenuItem = new javax.swing.JMenuItem();
        openFileMenuItem = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        closeFileMenuItem = new javax.swing.JMenuItem();
        closeAllMenuItem = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        saveFileMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        saveAllMenuItem = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        undoMenuItem = new javax.swing.JMenuItem();
        redoMenuItem = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        cutMenuItem = new javax.swing.JMenuItem(new DefaultEditorKit.CutAction());
        copyMenuItem = new javax.swing.JMenuItem(new DefaultEditorKit.CopyAction());
        pasteMenuItem = new javax.swing.JMenuItem(new DefaultEditorKit.PasteAction());
        runMenu = new javax.swing.JMenu();
        runScriptMenuItem = new javax.swing.JMenuItem();
        reportMenu = new javax.swing.JMenu();
        getReportMenuItem = new javax.swing.JMenuItem();
        sessionMenu = new javax.swing.JMenu();
        getSessionsMenuItem = new javax.swing.JMenuItem();
        closeSessionMenuItem = new javax.swing.JMenuItem();
        closeSessionsMenuItem = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DBClient");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMinimumSize(new java.awt.Dimension(560, 420));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        dbRollbackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rollback.png"))); // NOI18N
        dbRollbackButton.setToolTipText("Rollback");
        dbRollbackButton.setEnabled(false);
        dbRollbackButton.setFocusable(false);
        dbRollbackButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        dbRollbackButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        dbRollbackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dbRollbackButtonActionPerformed(evt);
            }
        });

        dbCommitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/commit.png"))); // NOI18N
        dbCommitButton.setToolTipText("Commit");
        dbCommitButton.setEnabled(false);
        dbCommitButton.setFocusable(false);
        dbCommitButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        dbCommitButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        dbCommitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dbCommitButtonActionPerformed(evt);
            }
        });

        sqlRunButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/run.jpeg"))); // NOI18N
        sqlRunButton.setToolTipText("Выполнить (F5)");
        sqlRunButton.setEnabled(false);
        sqlRunButton.setFocusable(false);
        sqlRunButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sqlRunButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sqlRunButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sqlRunButtonActionPerformed(evt);
            }
        });

        saveAllButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save all.png"))); // NOI18N
        saveAllButton.setToolTipText("Сохранить все");
        saveAllButton.setEnabled(false);
        saveAllButton.setFocusable(false);
        saveAllButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveAllButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        saveAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAllButtonActionPerformed(evt);
            }
        });

        saveFileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        saveFileButton.setToolTipText("Сохранить (Ctrl+S)");
        saveFileButton.setEnabled(false);
        saveFileButton.setFocusable(false);
        saveFileButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveFileButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        saveFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileButtonActionPerformed(evt);
            }
        });

        openFileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/open.png"))); // NOI18N
        openFileButton.setToolTipText("Открыть... (Ctrl+O)");
        openFileButton.setFocusable(false);
        openFileButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        openFileButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        openFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileButtonActionPerformed(evt);
            }
        });

        dbUsersComboBox.setEnabled(false);
        dbUsersComboBox.setMaximumSize(new java.awt.Dimension(100, 100));
        dbUsersComboBox.setMinimumSize(new java.awt.Dimension(50, 50));
        dbUsersComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dbUsersComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(openFileButton)
                .addGap(0, 0, 0)
                .addComponent(saveFileButton)
                .addGap(0, 0, 0)
                .addComponent(saveAllButton)
                .addGap(0, 0, 0)
                .addComponent(sqlRunButton)
                .addGap(0, 0, 0)
                .addComponent(dbCommitButton)
                .addGap(0, 0, 0)
                .addComponent(dbRollbackButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dbUsersComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 91, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(openFileButton)
            .addComponent(saveFileButton)
            .addComponent(saveAllButton)
            .addComponent(sqlRunButton)
            .addComponent(dbCommitButton)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dbUsersComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dbRollbackButton)))
        );

        jSplitPane3.setMinimumSize(new java.awt.Dimension(50, 50));
        jSplitPane3.setPreferredSize(new java.awt.Dimension(100, 100));

        jSplitPane4.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane4.setMinimumSize(new java.awt.Dimension(200, 100));
        jSplitPane4.setPreferredSize(new java.awt.Dimension(200, 100));

        tabPane.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        tabPane.setDoubleBuffered(true);
        tabPane.setMinimumSize(new java.awt.Dimension(200, 100));
        jSplitPane4.setTopComponent(tabPane);

        outputArea.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        outputArea.setMinimumSize(new java.awt.Dimension(200, 100));
        outputArea.setPreferredSize(new java.awt.Dimension(200, 100));

        consoleScrollPane.setDoubleBuffered(true);

        console.setEditable(false);
        console.setColumns(20);
        console.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        console.setRows(5);
        console.setDoubleBuffered(true);
        consoleScrollPane.setViewportView(console);

        outputArea.addTab("Консоль", consoleScrollPane);

        tableScrollPane.setDoubleBuffered(true);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setDoubleBuffered(true);
        table.getTableHeader().setReorderingAllowed(false);
        tableScrollPane.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setHeaderValue("Title 1");
            table.getColumnModel().getColumn(1).setHeaderValue("Title 2");
            table.getColumnModel().getColumn(2).setHeaderValue("Title 3");
            table.getColumnModel().getColumn(3).setHeaderValue("Title 4");
        }

        outputArea.addTab("Таблица", tableScrollPane);

        jSplitPane4.setRightComponent(outputArea);

        jSplitPane3.setRightComponent(jSplitPane4);

        connectionsTabbedPane.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        connectionsTabbedPane.setMinimumSize(new java.awt.Dimension(100, 50));
        connectionsTabbedPane.setPreferredSize(new java.awt.Dimension(20, 50));

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Соединения");
        connectionsTree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        connectionScrollPane.setViewportView(connectionsTree);

        connectionsTabbedPane.addTab("Соединения", connectionScrollPane);

        jSplitPane3.setLeftComponent(connectionsTabbedPane);

        fileMenu.setText("Файл");

        connectMenuItem.setText("Соединиться...");
        connectMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(connectMenuItem);
        fileMenu.add(jSeparator1);

        newFileMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newFileMenuItem.setText("Новый...");
        newFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newFileMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(newFileMenuItem);

        openFileMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openFileMenuItem.setText("Открыть...");
        openFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openFileMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openFileMenuItem);
        fileMenu.add(jSeparator2);

        closeFileMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        closeFileMenuItem.setText("Закрыть");
        closeFileMenuItem.setEnabled(false);
        closeFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeFileMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(closeFileMenuItem);

        closeAllMenuItem.setText("Закрыть все");
        closeAllMenuItem.setEnabled(false);
        closeAllMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeAllMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(closeAllMenuItem);
        fileMenu.add(jSeparator3);

        saveFileMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveFileMenuItem.setText("Сохранить");
        saveFileMenuItem.setEnabled(false);
        saveFileMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveFileMenuItem);

        saveAsMenuItem.setText("Сохранить как...");
        saveAsMenuItem.setEnabled(false);
        saveAsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveAsMenuItem);

        saveAllMenuItem.setText("Сохранить все");
        saveAllMenuItem.setEnabled(false);
        saveAllMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAllMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveAllMenuItem);
        fileMenu.add(jSeparator4);

        exitMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        exitMenuItem.setText("Выход");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        MainMenu.add(fileMenu);

        editMenu.setText("Редактирование");

        undoMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        undoMenuItem.setText("Отменить");
        undoMenuItem.setEnabled(false);
        undoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(undoMenuItem);

        redoMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        redoMenuItem.setText("Вернуть");
        redoMenuItem.setEnabled(false);
        redoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redoMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(redoMenuItem);
        editMenu.add(jSeparator6);

        cutMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        cutMenuItem.setMnemonic(KeyEvent.VK_T);
        cutMenuItem.setText("Вырезать");
        cutMenuItem.setEnabled(false);
        editMenu.add(cutMenuItem);

        copyMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        copyMenuItem.setMnemonic(KeyEvent.VK_C);
        copyMenuItem.setText("Копировать");
        copyMenuItem.setToolTipText("");
        copyMenuItem.setEnabled(false);
        editMenu.add(copyMenuItem);

        pasteMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        pasteMenuItem.setMnemonic(KeyEvent.VK_P);
        pasteMenuItem.setText("Вставить");
        pasteMenuItem.setEnabled(false);
        editMenu.add(pasteMenuItem);

        MainMenu.add(editMenu);

        runMenu.setText("Выполнить");

        runScriptMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        runScriptMenuItem.setText("Выполнить сценарий");
        runScriptMenuItem.setEnabled(false);
        runScriptMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runScriptMenuItemActionPerformed(evt);
            }
        });
        runMenu.add(runScriptMenuItem);

        MainMenu.add(runMenu);

        reportMenu.setText("Отчет");

        getReportMenuItem.setText("Получить отчет");
        getReportMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getReportMenuItemActionPerformed(evt);
            }
        });
        reportMenu.add(getReportMenuItem);

        MainMenu.add(reportMenu);

        sessionMenu.setText("Сессии");

        getSessionsMenuItem.setText("Список сессий");
        getSessionsMenuItem.setEnabled(false);
        getSessionsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getSessionsMenuItemActionPerformed(evt);
            }
        });
        sessionMenu.add(getSessionsMenuItem);

        closeSessionMenuItem.setText("Завершить сессию");
        closeSessionMenuItem.setEnabled(false);
        closeSessionMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeSessionMenuItemActionPerformed(evt);
            }
        });
        sessionMenu.add(closeSessionMenuItem);

        closeSessionsMenuItem.setText("Завершить все сессии");
        closeSessionsMenuItem.setEnabled(false);
        closeSessionsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeSessionsMenuItemActionPerformed(evt);
            }
        });
        sessionMenu.add(closeSessionsMenuItem);

        MainMenu.add(sessionMenu);

        jMenu1.setText("jMenu1");

        jMenuItem1.setText("jMenuItem1");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        MainMenu.add(jMenu1);

        setJMenuBar(MainMenu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSplitPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSplitPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }//GEN-END:initComponents
    
    private void newFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newFileMenuItemActionPerformed
        FileJDialog dialog = new FileJDialog();
        dialog.setVisible(true);
        dialog.getOkButton().addChangeListener((e) -> {
            String filePath = fileLocation(dialog);
            file = new NewFile(filePath);
            file.putFile(file, filePath);
            file.putSave(file, false);
            initFile(file);
        });
//        String filePath = fileLocation(dialog);
//        file = new NewFile(filePath);
//        file.putFile(file, filePath);
//        file.putSave(file, false);
//        initFile(file);
        runScriptMenuItem.setEnabled(true);
    }//GEN-LAST:event_newFileMenuItemActionPerformed

    private String fileLocation(FileJDialog dialog) {
//        dialog.setVisible(true);
        String filePath = dialog.getFilePath().getText() + dialog.getFileName().getText();
        return filePath;
    }

    private void initFile(File f) {
        area = new ClientArea();
        JTextArea textArea = new JTextArea();
        area.addJTextArea(textArea, f);
        undoMgr = new ClientUndoManager();
        UndoManager undo = new UndoManager();
        undoMgr.putUndoManager(textArea, undo);
        textArea.getDocument().addUndoableEditListener(undo);
        titles.put(f.getName(), f.getAbsolutePath());        
        JTextArea jTextArea = area.find(f);
        JScrollPane scrollPane = new JScrollPane();
        scrollPane.setViewportView(jTextArea);
        tabPane.addTab(f.getName(), scrollPane);
        componentsEnabled(true);
    }

    public JTextArea getConsole() {
        return console;
    }

    public JTable getTable() {
        return table;
    }

    public void setConnect(Connection connect) {
        this.connect = connect;
    }

    public Connection getConnect() {
        return connect;
    }
    
    private void sqlRunEnabled(boolean value) {
        sqlRunButton.setEnabled(value);
        dbUsersComboBox.setEnabled(value);
        runScriptMenuItem.setEnabled(value);
        getReportMenuItem.setEnabled(value);
        getSessionsMenuItem.setEnabled(value);
        closeSessionMenuItem.setEnabled(value);
        closeSessionsMenuItem.setEnabled(value);
    }
    
    private void componentsEnabled(boolean value) {
        saveFileButton.setEnabled(value);
        saveAllButton.setEnabled(value);
        closeFileMenuItem.setEnabled(value);
        closeAllMenuItem.setEnabled(value);
        saveFileMenuItem.setEnabled(value);
        saveAsMenuItem.setEnabled(value);
        saveAllMenuItem.setEnabled(value);
        undoMenuItem.setEnabled(value);
        redoMenuItem.setEnabled(value);
        cutMenuItem.setEnabled(value);
        copyMenuItem.setEnabled(value);
        pasteMenuItem.setEnabled(value);
    }
    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        formWindowClosing(null);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void saveFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileMenuItemActionPerformed
        int index = tabPane.getSelectedIndex();
        String titleAt = tabPane.getTitleAt(index);
        String tabTitle = find(titles, titleAt);
        if (!file.isSaved(file.find(tabTitle))) {
            File f = file.find(tabTitle);
            file.save(f, area.find(f));
        }
    }//GEN-LAST:event_saveFileMenuItemActionPerformed
    
    private String find(Map<String, String> map, String title) {
        for (Map.Entry<String, String> entry : map.entrySet()) {                
            if (title.equals(entry.getKey())) {
                return entry.getValue();
            }
        }
        return null;
    }

    private void closeFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeFileMenuItemActionPerformed
        saveFileMenuItemActionPerformed(evt);        
        int index = tabPane.getSelectedIndex();
        String titleAt = tabPane.getTitleAt(index);
        String tabTitle = find(titles, titleAt);
        File f = file.find(tabTitle);
        file.getFiles().remove(f);
        file.getSaved().remove(f);
        tabPane.remove(tabPane.getSelectedIndex());
        if (tabPane.getTabCount() == 0) {
            componentsEnabled(false);
        }
    }//GEN-LAST:event_closeFileMenuItemActionPerformed

    private void connectMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectMenuItemActionPerformed
//        ConnectionDialog dialog = new ConnectionDialog();
//        dialog.setVisible(true);
//        dialog.getConnectButton().addChangeListener((e) -> {
            try {
                oracle = new DBConnection();
//                String url = dialog.getUrl().getText();
//                String user = dialog.getUserName().getText();
//                String password = String.valueOf(dialog.getPassword().getPassword());
                    String connName = "hr";
                    String url = "jdbc:oracle:thin:@localhost:1521:xe";
                    String user = "hr";
                    String password = "hr";
//                String connName = "sys";
//                String url = "jdbc:oracle:thin:@localhost:1521:xe";
//                String user = "sys as sysdba";
//                String password = "root";
                Connection conn = DBConnection.getConnection(url, user, password);
                String userName = conn.getMetaData().getUserName();
                dbUsersComboBox.addItem(userName);
        //            dbUsersComboBox.setSelectedItem(userName);
                
//                String connectionName = dialog.getConnectionName().getText();
                    String connectionName = connName;
                DefaultMutableTreeNode root = new DefaultMutableTreeNode(connectionName);
                Object connectionsRoot = connectionsTree.getModel().getRoot();
                ((DefaultMutableTreeNode)connectionsRoot).add(root);
                oracle.getDatabaseStructure(conn, root);
                connectionsTree.setModel(new DefaultTreeModel((DefaultMutableTreeNode)connectionsRoot));
                sqlRunEnabled(true);
            } catch (SQLException sqle) {
                sqle.printStackTrace();
                console.append("Ошибка: " + sqle.toString());
            }
//        });
    }//GEN-LAST:event_connectMenuItemActionPerformed

    private void undoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoMenuItemActionPerformed
        UndoManager undo = undoMgr.find((JTextArea) tabPane.getComponentAt(tabPane.getSelectedIndex()));
        if(undo.canUndo()) {
            undo.undo();
        }
    }//GEN-LAST:event_undoMenuItemActionPerformed

    private void redoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redoMenuItemActionPerformed
        UndoManager undo = undoMgr.find((JTextArea) tabPane.getTabComponentAt(tabPane.getSelectedIndex()));
        if (undo.canRedo()) {
            undo.redo();
        }
    }//GEN-LAST:event_redoMenuItemActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        saveAllMenuItemActionPerformed(null);
        closeSessionsMenuItemActionPerformed(null);
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void runScriptMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runScriptMenuItemActionPerformed
//        try {
//            int index = tabPane.getSelectedIndex();
//            String titleAt = tabPane.getTitleAt(index);
//            String tabTitle = find(titles, titleAt);
//            JTextArea textArea = area.find(file.find(tabTitle));
//            Statement stmt = oracle.exec(connect, textArea);
            final String ln = System.getProperty("line.separator");
            try (Statement stmt = oracle.exec(connect, null)) {
            console.append("=========================================================" + ln + ln);
            oracle.getResultSet(stmt, table);
            int columnCount = table.getModel().getColumnCount();
            int rowCount = table.getModel().getRowCount();
            for (int i = 0; i < columnCount; i++) {
                console.append(table.getColumnName(i) + "\t");
//                console.append(table.getColumnName(i) + "    ");
            }
            console.append(ln);
            for (int j = 0; j < rowCount; j++) {
                for (int i = 0; i < columnCount; i++) {
                    Object tableValue = table.getValueAt(j, i);
//                    String value = String.format("%s        ", tableValue);
                    String value = String.format("%s\t\t", tableValue);
                    console.append(value);
                }
                console.append(ln);
            }
            console.append("=========================================================" + ln + ln);
        } catch (SQLException e) {
            console.append("Ошибка: " + e.toString());
            table.setModel(null);
        }
    }//GEN-LAST:event_runScriptMenuItemActionPerformed

    private void openFileMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileMenuItemActionPerformed
        OpenFileJDialog dialog = new OpenFileJDialog(this, true);
        dialog.setVisible(true);
        String filePath = dialog.getFilePath().getText();
//        File f = new File(filePath);
        NewFile f = new NewFile(filePath);
        initFile(f);
        if (file == null) {
            file = new NewFile(filePath);
        }
        file.openFile(f, area.find(f));
    }//GEN-LAST:event_openFileMenuItemActionPerformed

    private void closeAllMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeAllMenuItemActionPerformed
        saveAllMenuItemActionPerformed(evt);
        tabPane.removeAll();
        componentsEnabled(false);
        area.getTextAreas().clear();
        file.getFiles().clear();
        file.getSaved().clear();
    }//GEN-LAST:event_closeAllMenuItemActionPerformed

    private void saveAsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsMenuItemActionPerformed
        String title = tabPane.getTitleAt(tabPane.getSelectedIndex());
        String filePath = fileLocation(new FileJDialog());
        file.saveAs(new File(filePath), area.find(file.find(title)));
        tabPane.setTitleAt(tabPane.getSelectedIndex(), filePath);
    }//GEN-LAST:event_saveAsMenuItemActionPerformed

    private void saveAllMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAllMenuItemActionPerformed
        if (tabPane.getTabCount() > 0) {
            if (file != null) {
                if (!file.isSavedAll()) {
                    file.saveAll(area);
                }
            }
        }
    }//GEN-LAST:event_saveAllMenuItemActionPerformed

    private void getReportMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getReportMenuItemActionPerformed
        new ReportJDialog(this, true).setVisible(true);
    }//GEN-LAST:event_getReportMenuItemActionPerformed

    private void getSessionsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getSessionsMenuItemActionPerformed
        new SessionJDialog(this, true).setVisible(true);
    }//GEN-LAST:event_getSessionsMenuItemActionPerformed

    private void closeSessionsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeSessionsMenuItemActionPerformed
        if (oracle != null) {
            oracle.close();
        }
    }//GEN-LAST:event_closeSessionsMenuItemActionPerformed

    private void openFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openFileButtonActionPerformed
        openFileMenuItemActionPerformed(evt);
    }//GEN-LAST:event_openFileButtonActionPerformed

    private void saveFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileButtonActionPerformed
        saveFileMenuItemActionPerformed(evt);
    }//GEN-LAST:event_saveFileButtonActionPerformed

    private void saveAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAllButtonActionPerformed
        saveAllMenuItemActionPerformed(evt);
    }//GEN-LAST:event_saveAllButtonActionPerformed

    private void sqlRunButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sqlRunButtonActionPerformed
        runScriptMenuItemActionPerformed(evt);
    }//GEN-LAST:event_sqlRunButtonActionPerformed

    private void dbCommitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dbCommitButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dbCommitButtonActionPerformed

    private void dbRollbackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dbRollbackButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dbRollbackButtonActionPerformed

    private void dbUsersComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dbUsersComboBoxActionPerformed
        String userName = dbUsersComboBox.getSelectedItem().toString();
        Connection conn = oracle.find(userName);
        setConnect(conn);
    }//GEN-LAST:event_dbUsersComboBoxActionPerformed

    private void closeSessionMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeSessionMenuItemActionPerformed
        if (oracle != null) {
            oracle.close(connect);
        }
    }//GEN-LAST:event_closeSessionMenuItemActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        new DBPropertiesJDialog(this, true, connect).setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrontEndForm.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                 ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrontEndForm.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                 ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrontEndForm.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                 ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrontEndForm.class.getName()).log(java.util.logging.Level.SEVERE, null,
                                                                                 ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrontEndForm().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar MainMenu;
    private javax.swing.JMenuItem closeAllMenuItem;
    private javax.swing.JMenuItem closeFileMenuItem;
    private javax.swing.JMenuItem closeSessionMenuItem;
    private javax.swing.JMenuItem closeSessionsMenuItem;
    private javax.swing.JMenuItem connectMenuItem;
    private javax.swing.JScrollPane connectionScrollPane;
    private javax.swing.JTabbedPane connectionsTabbedPane;
    private javax.swing.JTree connectionsTree;
    private javax.swing.JTextArea console;
    private javax.swing.JScrollPane consoleScrollPane;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JButton dbCommitButton;
    private javax.swing.JButton dbRollbackButton;
    private javax.swing.JComboBox dbUsersComboBox;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem getReportMenuItem;
    private javax.swing.JMenuItem getSessionsMenuItem;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JSplitPane jSplitPane4;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JMenuItem newFileMenuItem;
    private javax.swing.JButton openFileButton;
    private javax.swing.JMenuItem openFileMenuItem;
    private javax.swing.JTabbedPane outputArea;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem redoMenuItem;
    private javax.swing.JMenu reportMenu;
    private javax.swing.JMenu runMenu;
    private javax.swing.JMenuItem runScriptMenuItem;
    private javax.swing.JButton saveAllButton;
    private javax.swing.JMenuItem saveAllMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JButton saveFileButton;
    private javax.swing.JMenuItem saveFileMenuItem;
    private javax.swing.JMenu sessionMenu;
    private javax.swing.JButton sqlRunButton;
    private javax.swing.JTabbedPane tabPane;
    private javax.swing.JTable table;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JMenuItem undoMenuItem;
    // End of variables declaration//GEN-END:variables
}
