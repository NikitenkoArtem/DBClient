
package oraclient.view;


import java.io.File;

import java.util.HashMap;
import java.util.Map;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.JTextField;

import oraclient.component.DBFileChooser;

import oraclient.io.LoadClass;

import oraclient.report.Report;

/**
 *
 * @author Price
 */
public class ReportJDialog extends javax.swing.JDialog {
    private JFrame parent;
    
    /** Creates new form ReportJDialog */
    public ReportJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.parent = (JFrame) parent;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        createReportBtn = new javax.swing.JButton();
        filePathPanel = new javax.swing.JPanel();
        filePathLbl = new javax.swing.JLabel();
        pdfOutputTxtField = new javax.swing.JTextField();
        pdfBrowseFSBtn = new javax.swing.JButton();
        xlsxOutputTxtField = new javax.swing.JTextField();
        xlsxBrowseFSBtn = new javax.swing.JButton();
        docxOutputTxtField = new javax.swing.JTextField();
        docxBrowseFSBtn = new javax.swing.JButton();
        pdfCheckBox = new javax.swing.JCheckBox();
        xlsxCheckBox = new javax.swing.JCheckBox();
        docxCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Создать отчет");
        setModal(true);
        setResizable(false);

        createReportBtn.setText("Создать");
        createReportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createReportBtnActionPerformed(evt);
            }
        });

        filePathPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        filePathLbl.setText("Расположение файла");

        pdfOutputTxtField.setEnabled(false);

        pdfBrowseFSBtn.setText("Обзор...");
        pdfBrowseFSBtn.setEnabled(false);
        pdfBrowseFSBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfBrowseFSBtnActionPerformed(evt);
            }
        });

        xlsxOutputTxtField.setEnabled(false);

        xlsxBrowseFSBtn.setText("Обзор...");
        xlsxBrowseFSBtn.setEnabled(false);
        xlsxBrowseFSBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xlsxBrowseFSBtnActionPerformed(evt);
            }
        });

        docxOutputTxtField.setEnabled(false);

        docxBrowseFSBtn.setText("Обзор...");
        docxBrowseFSBtn.setEnabled(false);
        docxBrowseFSBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docxBrowseFSBtnActionPerformed(evt);
            }
        });

        pdfCheckBox.setText("pdf");
        pdfCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdfCheckBoxActionPerformed(evt);
            }
        });

        xlsxCheckBox.setText("xlsx");
        xlsxCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xlsxCheckBoxActionPerformed(evt);
            }
        });

        docxCheckBox.setText("docx");
        docxCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docxCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout filePathPanelLayout = new javax.swing.GroupLayout(filePathPanel);
        filePathPanel.setLayout(filePathPanelLayout);
        filePathPanelLayout.setHorizontalGroup(
            filePathPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filePathPanelLayout.createSequentialGroup()
                .addGroup(filePathPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(filePathPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(filePathPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(docxCheckBox)
                            .addComponent(xlsxCheckBox)
                            .addComponent(pdfCheckBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(filePathPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(filePathPanelLayout.createSequentialGroup()
                                .addComponent(pdfOutputTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pdfBrowseFSBtn))
                            .addGroup(filePathPanelLayout.createSequentialGroup()
                                .addComponent(xlsxOutputTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(xlsxBrowseFSBtn))
                            .addGroup(filePathPanelLayout.createSequentialGroup()
                                .addComponent(docxOutputTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(docxBrowseFSBtn))))
                    .addGroup(filePathPanelLayout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(filePathLbl)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        filePathPanelLayout.setVerticalGroup(
            filePathPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(filePathPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(filePathLbl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(filePathPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pdfOutputTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pdfBrowseFSBtn)
                    .addComponent(pdfCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(filePathPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xlsxOutputTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xlsxBrowseFSBtn)
                    .addComponent(xlsxCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(filePathPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(docxOutputTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(docxBrowseFSBtn)
                    .addComponent(docxCheckBox))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(filePathPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(createReportBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(filePathPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(createReportBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }//GEN-END:initComponents

    private void pdfBrowseFSBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfBrowseFSBtnActionPerformed
        Map<String, String> filter = new HashMap<>();
        filter.put("PDF файлы (*.pdf)", "pdf");
        browseFS(pdfOutputTxtField, filter);
    }//GEN-LAST:event_pdfBrowseFSBtnActionPerformed

    private void createReportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createReportBtnActionPerformed
        JTable table = ((FrontEndForm) parent).getTable();
        LoadClass load = new LoadClass();
        load.addClass(new File(load.jarFilePath("lib/pdfbox-2.0.1/pdfbox-app-2.0.1.jar")));
        load.addClass(new File(load.jarFilePath("lib/poi-3.14/poi-3.14-20160307.jar")));
        load.addClass(new File(load.jarFilePath("lib/poi-3.14/poi-ooxml-3.14-20160307.jar")));
        load.addClass(new File(load.jarFilePath("lib/poi-3.14/poi-ooxml-schemas-3.14-20160307.jar")));
        load.addClass(new File(load.jarFilePath("lib/poi-3.14/ooxml-lib/xmlbeans-2.6.0.jar")));
        Report report = new Report();
        if (pdfCheckBox.isSelected()) {
            report.pdfReport(table, pdfOutputTxtField.getText());
        }
        if (xlsxCheckBox.isSelected()) {
            report.excelReport(table, xlsxOutputTxtField.getText());
        }
        if (docxCheckBox.isSelected()) {
            report.wordReport(table, docxOutputTxtField.getText());
        }
        this.setVisible(false);
    }//GEN-LAST:event_createReportBtnActionPerformed

    private void xlsxBrowseFSBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xlsxBrowseFSBtnActionPerformed
        Map<String, String> filter = new HashMap<>();
        filter.put("Файлы Excel (*.xlsx)", "xlsx");
        browseFS(xlsxOutputTxtField, filter);
    }//GEN-LAST:event_xlsxBrowseFSBtnActionPerformed

    private void docxBrowseFSBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docxBrowseFSBtnActionPerformed
        Map<String, String> filter = new HashMap<>();
        filter.put("Документы Word (*.docx)", "docx");
        browseFS(docxOutputTxtField, filter);
    }//GEN-LAST:event_docxBrowseFSBtnActionPerformed

    private void pdfCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdfCheckBoxActionPerformed
        if (pdfCheckBox.isSelected()) {
            pdfOutputTxtField.setEnabled(true);
            pdfBrowseFSBtn.setEnabled(true);
        } else {
            pdfOutputTxtField.setEnabled(false);
            pdfBrowseFSBtn.setEnabled(false);
        }
    }//GEN-LAST:event_pdfCheckBoxActionPerformed

    private void xlsxCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xlsxCheckBoxActionPerformed
        if (xlsxCheckBox.isSelected()) {
            xlsxOutputTxtField.setEnabled(true);
            xlsxBrowseFSBtn.setEnabled(true);
        } else {
            xlsxOutputTxtField.setEnabled(false);
            xlsxBrowseFSBtn.setEnabled(false);
        }
    }//GEN-LAST:event_xlsxCheckBoxActionPerformed

    private void docxCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docxCheckBoxActionPerformed
        if (docxCheckBox.isSelected()) {
            docxOutputTxtField.setEnabled(true);
            docxBrowseFSBtn.setEnabled(true);
        } else {
            docxOutputTxtField.setEnabled(false);
            docxBrowseFSBtn.setEnabled(false);
        }
    }//GEN-LAST:event_docxCheckBoxActionPerformed
    
    public JTextField getPDFOutputTxtField() {
        return pdfOutputTxtField;
    }
    
    private void browseFS(JTextField txtField, Map<String, String> filter) {
        JFileChooser chooser = new DBFileChooser("OK", "Отчет", filter);
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        int result = chooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            String filePath = chooser.getSelectedFile().getPath();
            txtField.setText(filePath);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createReportBtn;
    private javax.swing.JButton docxBrowseFSBtn;
    private javax.swing.JCheckBox docxCheckBox;
    private javax.swing.JTextField docxOutputTxtField;
    private javax.swing.JLabel filePathLbl;
    private javax.swing.JPanel filePathPanel;
    private javax.swing.JButton pdfBrowseFSBtn;
    private javax.swing.JCheckBox pdfCheckBox;
    private javax.swing.JTextField pdfOutputTxtField;
    private javax.swing.JButton xlsxBrowseFSBtn;
    private javax.swing.JCheckBox xlsxCheckBox;
    private javax.swing.JTextField xlsxOutputTxtField;
    // End of variables declaration//GEN-END:variables
}
